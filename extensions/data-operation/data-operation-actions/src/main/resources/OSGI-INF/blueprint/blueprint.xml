<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">
    <cm:property-placeholder persistent-id="org.apache.unomi.operation" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="kafka.brokers" value="localhost:9092"/>
            <cm:property name="kafka.topic" value="dataevent"/>
            <cm:property name="kafka.consumerCount" value="10"/>
            <cm:property name="kafka.autoCommitEnable" value="true"/>
            <cm:property name="kafka.workerPoolMaxSize" value="1024"/>
            <cm:property name="kafka.workerPoolCoreSize" value="2"/>
            <cm:property name="camel.component.kafka.worker-pool-max-size" value="2"/>
        </cm:default-properties>
    </cm:property-placeholder>
    <bean id="jacksonDataFormat" class="org.apache.camel.component.jackson.JacksonDataFormat">
        <property name="unmarshalType" value="org.apache.unomi.api.Event"/>
    </bean>
    <!-- cfg configuration -->
    <!-- Action executor -->
    <bean id="kafkaProducer" class="org.apache.unomi.operation.router.EventKafkaContextProducer"
          init-method="initCamelContext" destroy-method="preDestroy">
        <property name="kafkaProps">
            <map>
                <entry key="brokers" value="${kafka.brokers}"/>
                <entry key="topic" value="${kafka.topic}"/>
                <entry key="consumerCount" value="${kafka.consumerCount}"/>
                <entry key="autoCommitEnable" value="${kafka.autoCommitEnable}"/>
                <entry key="workerPoolMaxSize" value="${kafka.workerPoolMaxSize}"/>
                <entry key="workerPoolCoreSize" value="${kafka.workerPoolCoreSize}"/>
                <entry key="camel.component.kafka.worker-pool-max-size" value="${camel.component.kafka.worker-pool-max-size}"/>
            </map>
        </property>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="objectMapper" ref="jacksonDataFormat"/>
    </bean>
    <bean class="org.apache.unomi.operation.actions.BufferEventProcessingAction" id="validator">
        <property name="producer" ref="kafkaProducer"/>
    </bean>
    <service id="bufferEventProcessing" interface="org.apache.unomi.api.actions.ActionExecutor" ref="validator">
        <service-properties>
            <entry key="actionExecutorId" value="bufferEventProcessing"/>
        </service-properties>
    </service>
</blueprint>